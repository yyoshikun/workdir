
１．当日の抽選結果は日時の場所へ記入する
　　C:\Users\yoshikoshi\python_y\Num_3_predict\00_input
　　Num_3_2024.csv

２．最終行には次回の抽選日、全体平均値、各ナンバー　を記入してから上書き保存する
　　（000　と 999 を打ち込んだときも同じ予測値になる）

３．#△１廃止----- code_No012　のデータ行番号に+1を加算する(rowsの値)
４．#△１廃止----- code_No027　のデータ行番号に+1を加算する(rowsの値)

５．予測値が異常な値のときは　test_size=0.2　を0.2 /0.25 /0.3 /0.35 /0.4 /でチューニング
　　0.25は切り上げで0.3で計算されるので0.2か0.3がよいそうです。
　　test_size=0.2で揃えること

　　webではrandom_state=20か30か40で調整のほうがよいと書かれているので今後はここでね

６．正常な３桁であればOK
７．すべてを実行する。

８．#△１廃止----- code_No003 のデータ行番号にrows行番号に更新する
９．#△１廃止----- code_No004 のデータ行番号にrows行番号に更新する
　　※3時間程度学習するのでこのまま寝て朝確認する

10．出力データをCopyしてExcel に貼り付ける　チューニングした値も記載する
　　出力データだけにして補正するときにつかう
　　Num_3_2018_2024_Challeng history.xlsx



-----注意事項-----

※C:\Users\yoshikoshi\python_y\Num_3_predict\01_output\Excel_Book_Test
※当選番号確認してからの日付けと当選番号とチューニング値を更新する
　Num_3_2018_2024_Challeng history.xlsx
　Num_3_2023_2024_prediction_0816.xlsx

#△１廃止-----※Num_3_challenge_6で全体の評価を行う

※ここまででExcelの行番号に+1（rowsの値)であればOKなので購入する

※例(１)：1022 のときは022 例（１）：-322 のときは322　で統一
※Excel貼付け作業だけ残す、他は自動で処理に更新2023/10/7

-----履歴-----
△１：予測値が異常な桁数が現れる
test_size=0.2→0.3→0.4　試すが割合なので0.2で統一
random_state=20→30→40 20で統一していた。

66回から予測値のジャストマッチが現れたため、教科書には42が最適とあるので更新。→random_state=42 15%程度
67回で20でテストしたら通常に戻った。→random_state=20 15%程度 差異なし なので20で統一

